{"ast":null,"code":"import _slicedToArray from \"/Users/gaonyang/WebstormProjects/reactday/hooks-simple/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/gaonyang/WebstormProjects/reactday/hooks-simple/src/components/ResourceList.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst ResourceList = ({\n  resource\n}) => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        resources = _useState2[0],\n        setResources = _useState2[1];\n\n  const fetchResource = async resource => {\n    const response = await axios.get(`https://jsonplaceholder.typicode.com/${resource}`);\n  };\n\n  setResources(response.data);\n  useEffect(() => {\n    fetchResource(resource);\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, resources.length);\n};\n\nexport default ResourceList;","map":{"version":3,"sources":["/Users/gaonyang/WebstormProjects/reactday/hooks-simple/src/components/ResourceList.js"],"names":["React","useState","useEffect","axios","ResourceList","resource","resources","setResources","fetchResource","response","get","data","length"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAAA,oBACCJ,QAAQ,CAAC,EAAD,CADT;AAAA;AAAA,QAC1BK,SAD0B;AAAA,QACfC,YADe;;AAGjC,QAAMC,aAAa,GAAG,MAAOH,QAAP,IAAoB;AACtC,UAAMI,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAN,CAClB,wCAAuCL,QAAS,EAD9B,CAAvB;AAEH,GAHD;;AAKAE,EAAAA,YAAY,CAACE,QAAQ,CAACE,IAAV,CAAZ;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,aAAa,CAACH,QAAD,CAAb;AACH,GAFQ,EAEN,EAFM,CAAT;AAIA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMC,SAAS,CAACM,MAAhB,CADJ;AAIH,CAlBD;;AAoBA,eAAeR,YAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\n\nconst ResourceList = ({resource}) => {\n    const [resources, setResources] = useState([]);\n\n    const fetchResource = async (resource) => {\n        const response = await axios.get(\n            `https://jsonplaceholder.typicode.com/${resource}`);\n    };\n\n    setResources(response.data);\n\n    useEffect(() => {\n        fetchResource(resource)\n    }, [])\n\n    return (\n        <div>{resources.length}</div>\n    )\n\n};\n\nexport default ResourceList;\n"]},"metadata":{},"sourceType":"module"}