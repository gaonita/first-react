{"ast":null,"code":"import _slicedToArray from \"/Users/gaonyang/WebstormProjects/reactday/hooks-simple/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/gaonyang/WebstormProjects/reactday/hooks-simple/src/components/ResourceList.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst ResourceList = ({\n  resource\n}) => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        resources = _useState2[0],\n        setResources = _useState2[1]; // const fetchResource = async (resource) => {\n  //     const response = await axios.get(\n  //         `https://jsonplaceholder.typicode.com/${resource}`\n  //     );\n  //     setResources(response.data);\n  // };\n  //\n  // useEffect(() => {\n  //     fetchResource(resource)\n  // }, [resource]);\n\n\n  useEffect(() => {\n    (async resource => {\n      const response = await axios.get(`https://jsonplaceholder.typicode.com/${resource}`);\n      setResources(response.data);\n    })(resource);\n  }, [resource]);\n  return React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, resources.map(record => React.createElement(\"li\", {\n    key: record.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, record.title)));\n};\n\nexport default ResourceList;","map":{"version":3,"sources":["/Users/gaonyang/WebstormProjects/reactday/hooks-simple/src/components/ResourceList.js"],"names":["React","useState","useEffect","axios","ResourceList","resource","resources","setResources","response","get","data","map","record","id","title"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAAA,oBACCJ,QAAQ,CAAC,EAAD,CADT;AAAA;AAAA,QAC1BK,SAD0B;AAAA,QACfC,YADe,kBAGjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGAL,EAAAA,SAAS,CACL,MAAI;AACA,KAAC,MAAMG,QAAN,IAAiB;AACd,YAAMG,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAN,CAClB,wCAAuCJ,QAAS,EAD9B,CAAvB;AAGAE,MAAAA,YAAY,CAACC,QAAQ,CAACE,IAAV,CAAZ;AACH,KALD,EAKGL,QALH;AAMH,GARI,EASL,CAACA,QAAD,CATK,CAAT;AAaA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKC,SAAS,CAACK,GAAV,CAAcC,MAAM,IAAI;AAAI,IAAA,GAAG,EAAEA,MAAM,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqBD,MAAM,CAACE,KAA5B,CAAxB,CAAL,CADJ;AAIH,CAhCD;;AAkCA,eAAeV,YAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\n\nconst ResourceList = ({resource}) => {\n    const [resources, setResources] = useState([]);\n\n    // const fetchResource = async (resource) => {\n    //     const response = await axios.get(\n    //         `https://jsonplaceholder.typicode.com/${resource}`\n    //     );\n    //     setResources(response.data);\n    // };\n    //\n    // useEffect(() => {\n    //     fetchResource(resource)\n    // }, [resource]);\n\n\n    useEffect(\n        ()=>{\n            (async resource =>{\n                const response = await axios.get(\n                    `https://jsonplaceholder.typicode.com/${resource}`\n                );\n                setResources(response.data)\n            })(resource)\n        },\n        [resource]\n    );\n\n\n    return (\n        <ul>{resources.map(record => <li key={record.id}>{record.title}</li>)}</ul>\n    )\n\n};\n\nexport default ResourceList;\n"]},"metadata":{},"sourceType":"module"}